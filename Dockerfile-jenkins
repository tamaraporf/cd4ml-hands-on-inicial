FROM jenkins/jenkins:lts-jdk17

# Etapa 1 – Plugins Jenkins
USER jenkins
RUN jenkins-plugin-cli --plugins \
    blueocean \
    build-timestamp \
    timestamper \
    pollscm \
    github-api \
    git \
    github \
    credentials-binding \
    matrix-auth \
    workflow-aggregator

# Etapa 2 – Instalação do Python 3.10.12
USER root
ENV FLUENTD_HOST="fluentd"
ENV FLUENTD_PORT="24224"
ENV JAVA_OPTS="-Djenkins.install.runSetupWizard=false"
ENV JENKINS_URL="http://jenkins:10000"
ENV ACCESS_KEY=${ACCESS_KEY}
ENV SECRET_KEY=${SECRET_KEY}

COPY ./requirements.txt /tmp/requirements.txt

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        wget \
        libssl-dev \
        zlib1g-dev \
        libncurses5-dev \
        libnss3-dev \
        libsqlite3-dev \
        libreadline-dev \
        libffi-dev \
        curl \
        libbz2-dev && \
    wget https://www.python.org/ftp/python/3.10.12/Python-3.10.12.tgz && \
    tar -xf Python-3.10.12.tgz && \
    cd Python-3.10.12 && \
    ./configure --enable-optimizations && \
    make -j$(nproc) && \
    make altinstall && \
    cd .. && \
    rm -rf Python-3.10.12.tgz Python-3.10.12 && \
    python3.10 -m ensurepip && \
    python3.10 -m pip install --upgrade pip && \
    python3.10 -m pip install virtualenv && \
    python3.10 -m virtualenv /opt/venv && \
    /opt/venv/bin/pip install --upgrade pip && \
    /opt/venv/bin/pip install -r /tmp/requirements.txt && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Define o PATH com virtualenv
ENV PATH="/opt/venv/bin:$PATH"

# Etapa 3 – Scripts Groovy de configuração
COPY jenkins/1-configureJenkins.groovy /usr/share/jenkins/ref/init.groovy.d/
COPY jenkins/2-addAccessKeys.groovy /usr/share/jenkins/ref/init.groovy.d/